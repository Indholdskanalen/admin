diff --git a/Resources/public/js/slides-in-slide.js b/Resources/public/js/slides-in-slide.js
index 83a61a4..92e4b17 100644
--- a/Resources/public/js/slides-in-slide.js
+++ b/Resources/public/js/slides-in-slide.js
@@ -45,29 +45,20 @@ if (!window.slidesInSlides.run) {
     // present, so we'll have to be careful verify presence before accessing
     // anything.
     if (!slide.options || !slide.data || !slide.data.subslides) {
-      // Go straight to the next slide if we're missing something. For now we
-      // simply assume that we have a "next" to go to, if not, we're going
-      // to loop real fast.
-
-      // In some situations the data is just about to be ready. Skipping the
-      // slide once and letting us get control back right away gives us the
-      // time we need.
-      if (!slide.loop_throttle) {
-        region.itkLog.info("Skipping to buy time for slides in slide data ...");
-        slide.loop_throttle = 1;
-        return;
-      }
-
-      // We tried the skip, did not work, continue to next slide.
-      region.itkLog.info("No data for slides in slide, skipping");
-
-      region.nextSlide();
+      // We're missing data, either it was not there in the first place, or
+      // we're in the process of switching to a new revision of the slide where
+      // setup has not yet been invoked and our slide.data property is not
+      // yet in place.
+      // In either case, wait a sec, and then skip to next slide. When we get
+      // back to the current slide (may happen right away) setup has hopefully
+      // been invoked.
+      region.$timeout(function () {
+        region.itkLog.info("Missing sis data, delaying and skipping to buy time the framework to run setup ...");
+        region.nextSlide();
+      }, 1000);
       return;
     }
 
-    // Reset throttle in case we where successful.
-    slide.loop_throttle = false;
-
     var slide_duration = slide.data.subslide_duration ? slide.data.subslide_duration : 15;
 
     /**
