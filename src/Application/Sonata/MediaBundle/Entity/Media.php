<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\MediaBundle\Entity;

use Sonata\MediaBundle\Entity\BaseMedia as BaseMedia;
use Doctrine\ORM\Mapping as ORM;
use JMS\Serializer\Annotation\Groups;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * Serialization is defined in config/serializer/Entity.Media.xml
 *
 * @author <yourname> <youremail>
 */
class Media extends BaseMedia {
  /**
   * @var integer $id
   */
  protected $id;

  /**
   * @var datetime $updated_at
   */
  protected $updatedAt;

  /**
   * @ORM\OneToMany(targetEntity="MediaOrder", mappedBy="media")
   * @ORM\OrderBy({"sortOrder" = "ASC"})
   **/
  protected $mediaOrders;

  /**
   * Constructor
   */
  public function __construct()
  {
    $this->mediaOrders = new \Doctrine\Common\Collections\ArrayCollection();
  }

  /**
   * Get id
   *
   * @return integer $id
   */
  public function getId() {
    return $this->id;
  }

  /**
   * Get updated_at
   *
   * @return datetime $updatedAt
   */
  public function getUpdatedAt()
  {
    return $this->updatedAt;
  }

  /**
   * Add mediaOrder
   *
   * @param \Indholdskanalen\MainBundle\Entity\MediaOrder $mediaOrder
   * @return Media
   */
  public function addMediaOrder(\Indholdskanalen\MainBundle\Entity\MediaOrder $mediaOrder)
  {
    $this->mediaOrders[] = $mediaOrder;

    return $this;
  }

  /**
   * Remove mediaOrder
   *
   * @param \Indholdskanalen\MainBundle\Entity\MediaOrder $mediaOrder
   */
  public function removeMediaOrder(\Indholdskanalen\MainBundle\Entity\MediaOrder $mediaOrder)
  {
    $this->mediaOrders->removeElement($mediaOrder);
  }

  /**
   * Get mediaOrders
   *
   * @return \Doctrine\Common\Collections\Collection
   */
  public function getMediaOrders()
  {
    return $this->mediaOrders;
  }

}
